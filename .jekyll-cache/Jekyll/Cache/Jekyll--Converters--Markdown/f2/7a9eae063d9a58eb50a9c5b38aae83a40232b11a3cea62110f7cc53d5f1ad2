I"	<blockquote>
  <p>数据库范式</p>
</blockquote>

<p><strong>函数依赖：</strong>如学号能唯一确定姓名<br />
<strong>部分函数依赖：</strong>如主码为（学号，课程号）但学号就可以决定其中一条非主属性如姓名<br />
<strong>完全函数依赖</strong>：如主码为（学号，课程号）只有学号和课程号组合在一起才能唯一确定分数<br />
<strong>传递函数依赖：</strong>如通过学号可以得到系号，通过系号可以得到系主任，系号和系主任都不是主码，但系号改变会引起系主任的改变<br /></p>

<p>学号&gt;系名   系名&gt;系主任	则存在函数传递依赖 学号&gt;系主任<br /></p>

<p><strong>第一范式：</strong>不重复，原子性（不可再分，不可表中套表）<br />
<strong>第二范式：</strong>在第一范式的基础上没有部分函数依赖，属性完全依赖于主码<br />
<strong>第三范式：</strong>在第二范式的基础上，非键属性不传递依赖于关系的主码<br />
<strong>BC范式：</strong>在第三范式的基础上，每个属性都不传递依赖于关系的候选码（BC范式（BCNF）：符合3NF，并且，主属性不依赖于主属性若关系模式属于第一范式，且每个属性都不传递依赖于键码，则R属于BC范式。通常BC范式的条件有多种等价的表述：每个非平凡依赖的左边必须包含键码；每个决定因素必须包含键码。BC范式既检查非主属性，又检查主属性。当只检查非主属性时，就成了第三范式。满足BC范式的关系都必然满足第三范式。还可以这么说：若一个关系达到了第三范式，并且它只有一个候选码，或者它的每个候选码都是单属性，则该关系自然达到BC范式。）
<br />
<strong>例</strong><br />
第一范式：<br />
学号	姓名	课程号	分数	系名	系主任<br />
2019	小刀	数据库	90	信息学院	李主任<br /></p>

<p>第二范式：<br />
学号	课程号	分数<br />
2019	数据库	90<br /></p>

<p>学号	姓名	系名	系主任<br />
2019	小刀	信息学院	李主任<br /></p>

<p>第三范式：<br />
学号	课程号	分数<br />
2019	数据库	90<br /></p>

<p>学号	姓名<br />
2019	小刀<br /></p>

<p>系名	系主任<br />
信息学院	李主任<br /></p>
:ET